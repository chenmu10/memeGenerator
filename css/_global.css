
/*=============================================
=            Global            =
=============================================*/

* {
    box-sizing: border-box;
}

input[type=number]{
    width: 45px;
} 
html {
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    color: #292828;
    font-size: 14px;
}

body {
    margin: 0;
}

a {
    text-decoration: none;
}

button,a {
    display: inline-block;
    border-radius: 4px;
    background-color: #f4511e;
    border: none;
    color: #FFFFFF;
    text-align: center;
    font-size: 1.1em;
    padding: 5px;
    transition: all 0.3s;
    cursor: pointer;
    
  }
  
  button span {
    cursor: pointer;
    display: inline-block;
    position: relative;
    transition: 0.3s;
  }
  
  button span:after {
    content: '\00bb';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -20px;
    transition: 0.3s;
  }
  
  button:hover span {
    padding-right: 10px;
  }
  
  button:hover span:after {
    opacity: 1;
    right: 0;
  }

/*=====  End of Global  ======*/


/*-------Layout-----*/

.container {
    max-width: 1060px;
    width: 90%;
    margin: 0 auto;
}


/*-------header-----*/

header {
    height: 100px;
    background-color: black;
}


/*----Main------*/


/*----------  Gallery  ----------*/

.grid-container {
    display: grid;
    /* grid-template-columns - responsive without mediaqueries.
    200px is the minimum img size.
    each column is 200px minimum (one pic fit)  will grow to 1fr until screen width size is 400px - then two imgs can fit each 200px size. next breakpoint is 600px - 3 columns can fit. 
    */
    grid-template-columns: repeat(auto-fit,minmax(200px,1fr));
    /* rows - undefiend, automatically make rows as needed. with auto height-the height of the img in that row.*/
    grid-gap: 10px;
    padding: 10px;
}

.grid-container>img {
    /* display:block - img is inline by default- makes it have "line-height" applied to the bottom. display block gets rid of that line */
    display: block;
    /* width: 100% - img in grid cell will grow width to fit into changing cell size */
    width: 100%;
    cursor: pointer;
    background: rgb(192, 144, 144);
    border-radius: 2px;
    
   
}

.grid-container>img:hover {
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
}


/*=============================================
=            Meme Container            =
=============================================*/

#memeCanvas {
    margin: 50px;
}

input {
    margin: 5px;
}

/*=====  End of Meme Container  ======*/


/*----------  contact  ----------*/


/*----Footer----*/

footer {
    height: 160px;
    background-color: black;
}


/*=============================================
=            Helpers            =
=============================================*/


/* vertically centering everything: */

.vertical-center-flex {
    display: flex;
    align-items: center;
    justify-content: center;
}

.clean-list {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

.clean-btn {
    border: none;
    background: transparent;
    padding: 0;
}

.hidden {
    display: none;
}


/*=====  End of Helpers  ======*/


/*---flex---*/

.flex {
    display: flex;
}

.inline-flex {
    display: inline-flex;
}

.justify-center {
    justify-content: center;
}

.align-center {
    align-items: center;
}

.space-around {
    justify-content: space-around;
}

.space-between {
    justify-content: space-between;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-full {
    flex: 1;
}